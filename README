# README
# ======

deefuzzer : an easy and light media streaming tools


# 1. Introduction
# ===============

DeeFuzzer Tools are new light and easy tools to stream audio and video over internet. It is dedicated to people who wants to create playlisted webradios or webTVs with rich media contents. It depends on python, icecast2 server, libshout and some other tools.

Here are the main features of the DeeFuzzer Tools:

 * MP3 and OGG (audio & video) file streaming over internet
 * Full metadata encapsulation and management
 * RSS podcast generator (current tracks and playlists)
 * M3U playlist generator
 * Recursive, random (shuffled) or pre-defined playlists
 * Multi-threaded architecture (multiple stations now authorized !)
 * Auto TWITTER posting of the current playing track
 * VERY light and optimized streaming process !

It is neccessary to provide a config file which sets all needed parameters
(see example/myfuzz.xml for an example).


# 2. Installation
# ===============

see INSTALL


# 3. License
# ===============

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution. The terms
 are also available at http://svn.parisson.org/deefuzzer/DeeFuzzerLicense


# 4. Usage
# =========

Usage : deefuzzer CONFIGFILE
  
  where CONFIGFILE is the path for a XML config file. For example:

    $ deefuzzer example/myfuzz.xml

Note that you must edit the config file with right parameters before executing.
You can find an example for the XML file in the directory "example/" of this
application (maybe in /usr/share/deefuzzer if installed with the help of install.py)

Since 0.3, deefuzzer doesn't print anything into the shell, then a right <log> parameter
is needed in the XML config file.

BE CAREFULL : at the moment, the multi-threading implementation of deefuzzer instances
avoids to shut down the streams with CTRL+C... You have to kill them manually,
after a CTRL+Z, making this:

    $ kill -9 `pgrep deefuzzer`


# 5. Author
# =========

Guillaume Pellerin <yomguy@parisson.com>


# 6. Aknowledgements
# ==================

This work is inspired by the great - C - Oddsock's streaming program : Ezstream.
Since I needed to patch it in order to modify the playlist (randomize for example)
and make external batch tools to create multiple channels, I decided to rewrite it
from scratch in python.
Some parts of this work are also taken from another Parisson's project : Telemeta
(see http://svn.parisson.org/telemeta).

# 7. Licence
# ==========

See COPYING


# 8. Contact / Infos
# ==================

see http://svn.parisson.org/deefuzzer/ or http://parisson.com for more info.

